@charset "utf-8";
$r: 2.5em; // outer radius of ring
$b: 0.2 * $r; // ring thickness
$u: 0.5 * $b;
// $time: attr(var(data-time));
$e: cubic-bezier(0.365, 0, 0.63, 1);

@property --x {
  syntax: '<length-percentage>';
  initial-value: 0px;
  inherits: false;
}
@property --y {
  syntax: '<length-percentage>';
  initial-value: 0px;
  inherits: false;
}
.wrapper {
  position: relative;
  display: grid;
  place-items: center;
  font: 900 3em cuisine;
  z-index: 100;
}

.load {
  --p: 0;
  display: grid;
  counter-reset: p var(--p);

  &::before,
  &::after {
    grid-area: 1/ 1;
    background: #ffff;
  }

  &::before {
    --r: calc(100% - #{$b});
    --round: red calc(#{$u} - 1px), #0000 #{$u};
    --mask: radial-gradient(
        closest-side,
        #0000 var(--r),
        red calc(var(--r) + 1px) calc(100% - 1px),
        #0000
      ),
      conic-gradient(red calc(var(--p) * 1%), #0000 0%);

    padding: $r;
    -webkit-mask: var(--mask);
    mask: var(--mask);
    -webkit-mask-composite: source-in;
    mask-composite: intersect;
    content: '';
  }

  &::after {
    content: counter(p) '%';
    font-family: Inter;
    font-weight: 700;
    font-size: 36px;

    display: grid;
    place-items: center;
    color: #fff;
    -webkit-background-clip: text;
  }
}
.loadBackDrop {
  display: grid;
  counter-reset: p var(--p);
  position: absolute;
  inset: 0;
  display: grid;
  &::before {
    --r: calc(100% - #{$b});
    --mask: radial-gradient(
        closest-side,
        #0000 var(--r),
        red calc(var(--r) + 1px) calc(100% - 1px),
        #0000
      ),
      conic-gradient(red calc(100 * 1%), #0000 0%);

    padding: $r;
    -webkit-mask: var(--mask);
    mask: var(--mask);
    -webkit-mask-composite: source-in;
    mask-composite: intersect;
    content: '';
    grid-area: 1/ 1;
    background: rgba(255, 255, 255, 0.2);
  }
}
